{
    "swagger": "2.0",
    "info": {
        "description": "Notification Swagger APIs.",
        "title": "Notification",
        "contact": {
            "name": "API Support"
        },
        "version": "1.0"
    },
    "basePath": "/ecom-api/v1",
    "paths": {
        "/noti/all": {
            "get": {
                "description": "Get All Notification By Receiver, Device Token and Repo With Pagination",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Get All Notification",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0x0FB53F9589c8159C28370D541D96542ddd9b8Cb9",
                        "description": "Receiver. Must have '0x...' prefix address",
                        "name": "receiver",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device Token",
                        "name": "device_token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "latest",
                            "oldest"
                        ],
                        "type": "string",
                        "description": "Sort by 'latest' or 'oldest'",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "0: ALL, 1: Read, 2: Unread",
                        "name": "is_read",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "TIMEKEEPING",
                        "description": "For Timekeeping: 'TIMEKEEPING'",
                        "name": "repo",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Results per page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.GetReceiverNotificationsResponse"
                        }
                    }
                }
            }
        },
        "/noti/delete": {
            "delete": {
                "description": "Delete Notification Already Read By Id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Delete Notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID Notification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device Token",
                        "name": "device_token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/noti/mark_all_read": {
            "post": {
                "description": "Mark All Notification Already Read By Receiver, Device Token and Repo",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Mark All Read",
                "parameters": [
                    {
                        "type": "string",
                        "example": "0x0FB53F9589c8159C28370D541D96542ddd9b8Cb9",
                        "description": "Receiver. Must have '0x...' prefix address",
                        "name": "receiver",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device Token",
                        "name": "device_token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "TIMEKEEPING",
                        "description": "For Timekeeping: 'TIMEKEEPING'",
                        "name": "repo",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/noti/mark_read": {
            "post": {
                "description": "Mark Notification Already Read By Id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Mark Read",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID Notification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "0x0FB53F9589c8159C28370D541D96542ddd9b8Cb9",
                        "description": "Receiver. Must have '0x...' prefix address",
                        "name": "receiver",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device Token",
                        "name": "device_token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "TIMEKEEPING",
                        "description": "For Timekeeping: 'TIMEKEEPING'",
                        "name": "repo",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Returns a \"pong\" message to indicate that the server is up",
                "summary": "Ping the server",
                "responses": {
                    "200": {
                        "description": "message: pong",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.GetReceiverNotificationsResponse": {
            "type": "object",
            "properties": {
                "notis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Notification"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/controller.Pagination"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "controller.Pagination": {
            "type": "object",
            "properties": {
                "cur_page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.Notification": {
            "type": "object",
            "properties": {
                "atTime": {
                    "type": "integer"
                },
                "body": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "deviceToken": {
                    "type": "string"
                },
                "eventId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "isRead": {
                    "type": "boolean"
                },
                "platform": {
                    "type": "integer"
                },
                "repo": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        }
    }
}